plugins {
    id 'com.gradle.build-scan' version '1.9.1'
    id 'com.gradle.plugin-publish' version '0.9.9'
    id 'me.champeau.buildscan-recipes' version '0.2.0'
    id 'idea'
}


apply plugin: 'groovy'
apply plugin: 'maven-publish'

repositories {
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    mavenLocal()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
//    compile 'jaci.gradle:EmbeddedTools:2018.05.05'
    compile 'gradle.plugin.jaci.gradle:DeployTools:2018.05.06'
    compile 'de.undercouch:gradle-download-task:3.1.2'
    compile 'com.google.code.gson:gson:2.2.4'
}

buildScan {
    licenseAgreementUrl = 'https://gradle.com/terms-of-service'
    licenseAgree = 'yes'
}

buildScanRecipes {
    recipes 'git-commit', 'git-status', 'travis-ci', 'disk-usage', 'gc-stats'
}

group = "jaci.openrio.gradle"
archivesBaseName = "GradleRIO"
version = "2018.05.05"

pluginBundle {
    website = 'https://github.com/Open-RIO/GradleRIO'
    vcsUrl = 'https://github.com/Open-RIO/GradleRIO'
    description = 'Managing FRC projects, the Gradle way'
    tags = ['frc', 'wpilib', 'openrio', 'gradlerio']

    plugins {
        gradleRio {
            id = "${project.group}.${project.archivesBaseName}"
            displayName = 'GradleRIO'
        }
    }
}

publishing {
    publications {
        plugin(MavenPublication) {
            artifact(jar) {
                if (project.hasProperty('localPublish')) {
                    classifier null
                    groupId 'gradle.plugin.' + group
                }
            }
        }
    }
}

task deleteQuickstart() {
    doLast {
        def f = new File("Quickstart.zip")
        if (f.exists()) f.delete()
    }
}

task zipQuickstart(type: Zip) {
    dependsOn deleteQuickstart
    from('quickstart')
    include '**/*.cpp', '**/*.hpp', '**/*.h', "**/*.java", '**/gradle/**/*', '**/build.gradle', '**/settings.gradle', '**/gradlew', '**/gradlew.bat', '**/.gitignore'
    exclude '.vscode/**/*', '.gradle/**/*', 'build/**/*'
    destinationDir projectDir
    archiveName 'Quickstart.zip'
}

build.dependsOn zipQuickstart

// Release both plugin and build other projects
task fullRelease() {
    dependsOn publishPlugins
    dependsOn zipQuickstart
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.7'
}
